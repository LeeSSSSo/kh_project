
--Drop Table

DROP TABLE USER_INFO;
DROP TABLE commentary;
DROP TABLE media;
DROP TABLE webtoon;
DROP TABLE drama;
DROP TABLE Announcement;

-- Constraint 확인
SELECT * FROM USER_CONSTRAINTS;

-- USER_INFO table 생성
CREATE TABLE USER_INFO(
    u_num VARCHAR2(10),
    name VARCHAR2(300),
    nickNm VARCHAR2(300),
    passwd VARCHAR2(100),
    id VARCHAR2(100),
    ph_num VARCHAR2(50)
);

-- 주키 추가(u_num)
ALTER TABLE USER_INFO ADD CONSTRAINT PK_U_NUM PRIMARY KEY (U_NUM);
ALTER TABLE USER_INFO ADD CONSTRAINT UQ_ph_num UNIQUE (ph_num);

-- Sequence 생성
CREATE SEQUENCE SEQ_U_NUM
    START WITH 1 
    INCREMENT BY 1
    NOCYCLE
    NOCACHE;

-- 데이터 생성시 자동으로 sequence 번호 넣어주는 TRIGGER
-- PL/SQL 활용
CREATE OR REPLACE TRIGGER TRG_U_NUM
BEFORE INSERT ON USER_INFO
FOR EACH ROW
BEGIN
    :NEW.u_num := 'U' || SEQ_U_NUM.NEXTVAL;
END;

-- MEDIA table 생성
CREATE TABLE MEDIA( 
    u_num VARCHAR2(10),
    score NUMBER(4,2),
    opendate DATE,
    story VARCHAR2(3000),
    poster VARCHAR2(3000),
    highlight VARCHAR2(3000),
    title VARCHAR2(100)
);

-- 주키 추가(m_num)
ALTER TABLE MEDIA ADD CONSTRAINT PK_M_NUM PRIMARY KEY (M_NUM);

-- Sequence 생성
CREATE SEQUENCE SEQ_M_NUM
    START WITH 1 
    INCREMENT BY 1
    NOCYCLE
    NOCACHE;

-- 데이터 생성시 자동으로 sequence 번호 넣어주는 TRIGGER
-- PL/SQL 활용
CREATE OR REPLACE TRIGGER TRG_M_NUM
BEFORE INSERT ON MEDIA
FOR EACH ROW
BEGIN
    :NEW.u_num := 'M' || SEQ_u_NUM.NEXTVAL;
END;

-- WEBTOON table 생성
CREATE TABLE WEBTOON(
    u_num VARCHAR2(10),
    title VARCHAR2(200),
    thumbnail VARCHAR2(3000),
    synopsis VARCHAR2(3000),
    starScoreAverage NUMBER(4,2),
    readCount NUMBER(11),
    linkUrl VARCHAR2(50),
    writingAuthorName VARCHAR2(50)
);

-- 주키 추가(w_num)
ALTER TABLE WEBTOON ADD CONSTRAINT PK_W_NUM PRIMARY KEY (W_NUM);

-- Sequence 생성
CREATE SEQUENCE SEQ_W_NUM
    START WITH 1 
    INCREMENT BY 1
    NOCYCLE
    NOCACHE;

-- 데이터 생성시 자동으로 sequence 번호 넣어주는 TRIGGER
-- PL/SQL 활용
CREATE OR REPLACE TRIGGER TRG_W_NUM
BEFORE INSERT ON WEBTOON
FOR EACH ROW
BEGIN
    :NEW.w_num := 'W' || SEQ_W_NUM.NEXTVAL;
END;   

-- drama table 생성
CREATE TABLE DRAMA(
    d_num VARCHAR2(10),
    name VARCHAR2(200),
    overview VARCHAR2(3000),
    poster_path VARCHAR2(3000),
    first_air_date DATE
);

--주키 추가
ALTER TABLE DRAMA ADD CONSTRAINT PK_D_NUM PRIMARY KEY (D_NUM);

-- Sequence 생성
CREATE SEQUENCE SEQ_D_NUM
    START WITH 1 
    INCREMENT BY 1
    NOCYCLE
    NOCACHE;

-- 데이터 생성시 자동으로 sequence 번호 넣어주는 TRIGGER
-- PL/SQL 활용
CREATE OR REPLACE TRIGGER TRG_D_NUM
BEFORE INSERT ON DRAMA
FOR EACH ROW
BEGIN
    :NEW.d_num := 'D' || SEQ_D_NUM.NEXTVAL;
END; 

-- Commentary table 추가
CREATE TABLE COMMENTARY(
    c_num VARCHAR2(10),
    u_num VARCHAR2(10),
    criticism VARCHAR2(150),
    score_c NUMBER(2,1),
    writedate DATE
)

--주키 추가(C_NUM)
ALTER TABLE COMMENTARY ADD CONSTRAINT PK_C_NUM PRIMARY KEY (C_NUM);

--외래키 추가(U_NUM, M_NUM, W_NUM, D_NUM)
ALTER TABLE COMMENTARY ADD CONSTRAINT FK_U_NUM FOREIGN KEY (U_NUM) 
REFERENCES USER_INFO(U_NUM) ON DELETE CASCADE;

ALTER TABLE COMMENTARY ADD CONSTRAINT FK_M_NUM FOREIGN KEY (U_NUM)
REFERENCES MEDIA(U_NUM) ON DELETE CASCADE;

ALTER TABLE COMMENTARY ADD CONSTRAINT FK_W_NUM FOREIGN KEY (U_NUM)
REFERENCES WEBTOON(U_NUM) ON DELETE CASCADE;

ALTER TABLE COMMENTARY ADD CONSTRAINT FK_D_NUM FOREIGN KEY (U_NUM)
REFERENCES DRAMA(U_NUM) ON DELETE CASCADE;

-- Sequence 생성
CREATE SEQUENCE SEQ_C_NUM
    START WITH 1 
    INCREMENT BY 1
    NOCYCLE
    NOCACHE;

-- 데이터 생성시 자동으로 sequence 번호 넣어주는 TRIGGER
-- PL/SQL 활용
CREATE OR REPLACE TRIGGER TRG_C_NUM
BEFORE INSERT ON COMMENTARY
FOR EACH ROW
BEGIN
    :NEW.c_num := SEQ_C_NUM.NEXTVAL;
END; 

--Announcement table 추가
CREATE TABLE ANNOUNCEMENT(
    a_num VARCHAR2(10),
    a_title VARCHAR2(300),
    a_content VARCHAR2(3000),
    a_date DATE
);

--주키 추가
ALTER TABLE ANNOUNCEMENT ADD CONSTRAINT PK_A_NUM PRIMARY KEY (A_NUM);

-- Sequence 생성
CREATE SEQUENCE SEQ_A_NUM
    START WITH 1 
    INCREMENT BY 1
    NOCYCLE
    NOCACHE;

-- 데이터 생성시 자동으로 sequence 번호 넣어주는 TRIGGER
-- PL/SQL 활용
CREATE OR REPLACE TRIGGER TRG_A_NUM
BEFORE INSERT ON ANNOUNCEMENT
FOR EACH ROW
BEGIN
    :NEW.a_num := 'A' || SEQ_A_NUM.NEXTVAL;
END; 

-- 데이터 생성시 자동으로 현재 날짜 넣어주는 TRIGGER
CREATE OR REPLACE TRIGGER TRG_A_DATE
BEFORE INSERT ON ANNOUNCEMENT
FOR EACH ROW
BEGINh
    :NEW.a_date := SYSDATE;
END;

-- Admin table 추가
CREATE TABLE ADMIN(
    id VARCHAR2(100),
    passwd VARCHAR2(100)
);

-- 주키 추가
ALTER TABLE ADMIN ADD CONSTRAINT PK_ID PRIMARY KEY (id);

-- User_info table sample data 10개

-- admin id, password 정하기
INSERT INTO ADMIN(id, passwd) VALUES('admin', '1234');

--admin table에 데이터 들어갔는지 확인
select * from admin;

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(1, '존 도우', 'johndoe', 'password123', 'johndoe123', '010-1234-5678');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(2, '제인 스미스', 'janesmith', 'password456', 'janesmith456', '010-2345-6789');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(3, '마크 존슨', 'markjohnson', 'password789', 'markjohnson789', '010-3456-7890');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(4, '에밀리 데이비스', 'emilydavis', 'password101', 'emilydavis101', '010-4567-8901');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(5, '마이클 브라운', 'michaelbrown', 'password112', 'michaelbrown112', '010-5678-9012');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(6, '사라 윌슨', 'sarahwilson', 'password134', 'sarahwilson134', '010-6789-0123');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(7, '데이비드 무어', 'davidmoore', 'password145', 'davidmoore145', '010-7890-1234');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(8, '올리비아 테일러', 'oliviataylor', 'password156', 'oliviataylor156', '010-8901-2345');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(9, '다니엘 앤더슨', 'danielanderson', 'password167', 'danielanderson167', '010-9012-3456');

INSERT INTO user_info (U_NUM, NAME, NICKNM, PASSWD, ID, PH_NUM) VALUES
(10, '소피아 토마스', 'sophiathomas', 'password178', 'sophiathomas178', '010-0123-4567');

-- 드라마 테이블에 데이터 삽입
INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(1, '드라마 A', '탐정을 주인공으로 한 스릴 넘치는 드라마.', '/images/drama_a.jpg', TO_DATE('2025-07-20', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(2, '드라마 B', '예상치 못한 반전이 있는 로맨틱 코미디.', '/images/drama_b.jpg', TO_DATE('2025-08-15', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(3, '드라마 C', '디스토피아 미래를 배경으로 한 SF 어드벤처.', '/images/drama_c.jpg', TO_DATE('2025-09-01', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(4, '드라마 D', '왕족을 중심으로 한 역사적인 드라마.', '/images/drama_d.jpg', TO_DATE('2025-10-05', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(5, '드라마 E', '복잡한 사건이 얽힌 범죄 드라마.', '/images/drama_e.jpg', TO_DATE('2025-07-25', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(6, '드라마 F', '긴장감 넘치는 심리 스릴러 드라마.', '/images/drama_f.jpg', TO_DATE('2025-11-10', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(7, '드라마 G', '가족 간의 관계와 비밀을 다룬 드라마.', '/images/drama_g.jpg', TO_DATE('2025-12-01', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(8, '드라마 H', '하이테크 사회를 배경으로 한 미래의 드라마.', '/images/drama_h.jpg', TO_DATE('2025-07-30', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(9, '드라마 I', '극한 상황에서의 생존을 그린 드라마.', '/images/drama_i.jpg', TO_DATE('2025-08-20', 'YYYY-MM-DD'));

INSERT INTO DRAMA (D_NUM, NAME, OVERVIEW, POSTER_PATH, FIRST_AIR_DATE) VALUES
(10, '드라마 J', '실제 사건을 바탕으로 한 정치 스릴러.', '/images/drama_j.jpg', TO_DATE('2025-09-10', 'YYYY-MM-DD'));

-- 공지사항 테이블에 데이터 삽입
INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(1, TO_DATE('2025-07-01', 'YYYY-MM-DD'), '속보: 주요 사건 발생', '중요 사건이 발생했습니다. 자세한 소식은 계속 전해드리겠습니다!');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(2, TO_DATE('2025-07-05', 'YYYY-MM-DD'), '새로운 드라마 방영 예정: 드라마 A', '기대되는 드라마 A가 다음 주에 방영됩니다. 놓치지 마세요!');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(3, TO_DATE('2025-07-10', 'YYYY-MM-DD'), '기술 업데이트', 'AI 기술의 새로운 발전이 산업을 혁신하고 있습니다.');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(4, TO_DATE('2025-07-15', 'YYYY-MM-DD'), '스포츠 챔피언십 공지', '매년 열리는 스포츠 챔피언십이 8월 20일에 진행됩니다. 준비하세요!');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(5, TO_DATE('2025-07-20', 'YYYY-MM-DD'), '연예인 인터뷰: 배우 B', '배우 B가 자신의 성공 비결을 최신 인터뷰에서 공유합니다.');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(6, TO_DATE('2025-07-25', 'YYYY-MM-DD'), '예술 축제 공지', '다음 주부터 매일 공연이 펼쳐지는 예술 축제에 참여하세요!');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(7, TO_DATE('2025-08-01', 'YYYY-MM-DD'), '흥미진진한 영화 개봉', '이 달 말에 개봉되는 흥미로운 영화에 대한 소식입니다.');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(8, TO_DATE('2025-08-05', 'YYYY-MM-DD'), '음악 콘서트 소식', '유명 밴드가 이번 주말에 당신의 도시에서 공연합니다. 지금 티켓을 예매하세요!');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(9, TO_DATE('2025-08-10', 'YYYY-MM-DD'), '연례 기술 컨퍼런스', '8월 30일에 열리는 연례 기술 컨퍼런스에 참여하세요. 세계적인 기업의 연사가 등장합니다.');

INSERT INTO announcement (A_NUM, A_DATE, A_TITLE, A_CONTENT) VALUES
(10, TO_DATE('2025-08-15', 'YYYY-MM-DD'), '건강 및 웰빙 팁', '균형 잡힌 생활을 위한 간단한 건강 팁을 소개합니다!');

create table announcement (
  a_num number primary key,        -- PK, 자동 NOT NULL
  a_date date not null,            -- 작성일 필수
  a_title varchar2(200) not null,  -- 제목 필수
  a_content varchar2(2000) not null -- 내용 필수
);

DROP TABLE ANNOUNCEMENT;
select * from announcement;

INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('사이트 점검 안내', '더 나은 서비스 제공을 위해 7월 20일 0시부터 3시까지 시스템 점검이 진행됩니다.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('신규 기능 오픈', '영화 추천 기능이 새롭게 추가되었습니다! 많은 이용 바랍니다.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('이벤트 당첨자 발표', '7월 리뷰 이벤트 당첨자 명단이 공지사항에 게시되었습니다.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('개인정보 처리방침 변경', '개인정보 처리방침이 8월 1일자로 변경됩니다. 자세한 내용은 홈페이지를 참고해주세요.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('서비스 일시 중단 안내', '서버 업그레이드로 인해 7월 25일 오후 2시부터 4시까지 서비스가 일시 중단됩니다.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('공지사항 테스트', '이 공지는 테스트용으로 등록되었습니다.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('커뮤니티 기능 안내', '커뮤니티 게시판 이용 방법을 공지사항에서 확인할 수 있습니다.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('회원가입 오류 안내', '일부 브라우저에서 회원가입 오류가 발생하여 현재 수정 중입니다.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('모바일 앱 출시', '안드로이드 및 iOS 모바일 앱이 출시되었습니다. 많은 이용 부탁드립니다.');
INSERT INTO ANNOUNCEMENT(a_title, a_content) VALUES ('운영 정책 변경 안내', '사이트 운영 정책이 변경되어 사전에 안내 드립니다.');


SELECT * FROM ANNOUNCEMENT
ORDER BY a_num desc

delete from announcement
where a_num = 'A57'



